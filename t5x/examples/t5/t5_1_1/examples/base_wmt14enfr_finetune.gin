from __gin__ import dynamic_registration
import t5.data.mixtures
import __main__ as train_script
from t5x import utils
from t5x import models


include 't5x/configs/runs/pretrain.gin'
include 't5x/examples/t5/t5_1_1/base.gin'

BATCH_SIZE = 128
MIXTURE_OR_TASK_NAME = "wmt14_enfr_v003"
TASK_FEATURE_LENGTHS = {'inputs': 256, 'targets': 256}
DROPOUT_RATE = 0.1

train_script.train:
  eval_period = 100

utils.RestoreCheckpointConfig:
  path = %INITIAL_CHECKPOINT_PATH
  mode = 'specific'

train_script.train:
  train_dataset_cfg = @train/utils.DatasetConfig()
  train_eval_dataset_cfg = @train_eval/utils.DatasetConfig()
  infer_eval_dataset_cfg = @infer_eval/utils.DatasetConfig()

models.EncoderDecoderModel.predict_batch_with_aux.num_decodes = 4

infer_eval/utils.DatasetConfig:
  mixture_or_task_name = %MIXTURE_OR_TASK_NAME
  task_feature_lengths = %TASK_FEATURE_LENGTHS
  split = 'validation'
  batch_size = 64
  shuffle = False
  seed = 42
  use_cached = %USE_CACHED_TASKS
  pack = False
  module = %MIXTURE_OR_TASK_MODULE

seqio.Evaluator:
  logger_cls = [@seqio.PyLoggingLogger, @seqio.TensorBoardLogger, @seqio.JSONLogger]
  num_examples = None  # Use all examples in the dataset.
  use_memory_cache = True
